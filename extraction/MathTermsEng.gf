--# -path=.:morphodict:../extraction
concrete MathTermsEng of MathTerms = CatEng ** open ExtractEng in {
lincat MT = Utt ;
lin Fermat's_Last_Theorem_Q132469_MT = variants {} ; --Fermat's Last Theorem 
lin primary_decomposition_Q172298_CN = AdjCN (PositA primary_A) (UseN decomposition_N) ;  
lin Catalan's_conjecture_Q174955_MT = variants {} ; --Catalan's conjecture 
lin rational_root_theorem_Q180345_CN = AdjCN (PositA rational_A) (UseN (CompoundN root_N theorem_N)) ;  
lin Euclidean_division_Q181054_MT = variants {} ; --Euclidean division 
lin fundamental_theorem_of_algebra_Q192760_CN = NounPrepCN (AdjCN (PositA fundamental_A) (UseN theorem_N)) (PrepNP of_Prep (BareCN (UseN algebra_N))) ;  
lin Euler's_theorem_Q193910_MT = variants {} ; --Euler's theorem 
lin power_set_Q205170_CN = UseN (CompoundN power_N set_N) ;  
lin intersection_Q185837_CN = UseN intersection_N ;  
lin Lax_equivalence_theorem_Q256303_MT = variants {} ; --Lax equivalence theorem 
lin inverse_element_Q338057_CN = AdjCN (PositA inverse_A) (UseN element_N) ;  
lin subset_Q177646_CN = UseN subset_N ;  
lin 'root-finding_algorithm_Q1085860_CN' = UseN (CompoundN root_N (CompoundN finding_N algorithm_N)) ;  
lin line_Q1228250_CN = UseN line_N ;  
lin class_Q217594_CN = UseN class_N ;  
lin Abouabdillah's_theorem_Q1094975_MT = variants {} ; --Abouabdillah's theorem 
lin rate_of_convergence_Q1783502_CN = NounPrepCN (UseN rate_N) (PrepNP part_Prep (BareCN (UseN convergence_N))) ;  
lin semifield_Q97598360_MT = variants {} ; --semifield 
lin Bellman's_lost_in_a_forest_problem_Q56291656_MT = variants {} ; --Bellman's lost in a forest problem 
lin inclusion_Q6014822_CN = UseN inclusion_N ;  
lin center_region_Q110910247_CN = AdjCN (PositA center_A) (UseN region_N) ;  
lin Russell's_paradox_Q33401_MT = variants {} ; --Russell's paradox 
lin trigonometric_function_Q93344_CN = AdjCN (PositA trigonometric_A) (UseN function_N) ;  
lin algebraic_number_Q168817_CN = AdjCN (PositA algebraic_A) (UseN number_N) ;  
lin algebraic_integer_Q646245_CN = AdjCN (PositA algebraic_A) (UseN integer_N) ;  
lin fundamental_theorem_of_arithmetic_Q670235_CN = NounPrepCN (AdjCN (PositA fundamental_A) (UseN theorem_N)) (PrepNP of_Prep (BareCN (UseN arithmetic_N))) ;  
lin magma_Q679903_CN = UseN magma_N ;  
lin Jaccard_index_Q865360_MT = variants {} ; --Jaccard index 
lin supremum_Q215071_MT = variants {} ; --supremum 
lin 'Teichmüller–Tukey_lemma_Q277987_MT' = variants {} ; --Teichmüller–Tukey lemma 
lin vertical_angles_Q10906396_CN = AdjCN (PositA vertical_A) (UseN angle_N) ;  
lin condition_number_Q1147936_CN = UseN (CompoundN condition_N number_N) ;  
lin numerical_algorithm_Q124355768_CN = AdjCN (PositA numerical_A) (UseN algorithm_N) ;  
lin primes_in_arithmetic_progression_Q1043113_CN = NounPrepCN (UseN prime_N) (PrepNP in_Prep (BareCN (UseN (CompoundN arithmetic_N progression_N)))) ;  
lin Vinogradov's_theorem_Q1694565_MT = variants {} ; --Vinogradov's theorem 
lin prolate_spheroid_Q3297588_CN = AdjCN (PositA prolate_A) (UseN spheroid_N) ;  
lin correlation_Q5172842_CN = UseN correlation_N ;  
lin cardinality_Q4049983_CN = UseN cardinality_N ;  
lin Cartesian_product_Q173740_CN = AdjCN (PositA Cartesian_A) (UseN product_N) ;  
lin zeta_function_Q196822_CN = UseN (CompoundN zeta_N function_N) ;  
lin Bertrand's_postulate_Q632546_MT = variants {} ; --Bertrand's postulate 
lin geometric_concept_Q21550639_CN = AdjCN (PositA geometric_A) (UseN concept_N) ;  
lin aleph_null_Q1445491_CN = UseN (CompoundN aleph_N null_N) ;  
lin numerical_method_Q24262840_CN = AdjCN (PositA numerical_A) (UseN method_N) ;  
lin Hjelmslev's_theorem_Q1720410_MT = variants {} ; --Hjelmslev's theorem 
lin set_operation_Q1964995_CN = AdjCN (PastPartAP set_set_V) (UseN operation_N) ;  
lin moving_sofa_problem_Q2635526_MT = variants {} ; --moving sofa problem 
lin set_of_integers_Q47007735_CN = NounPrepCN (UseN set_N) (PrepNP part_Prep (IndefPluralCN (UseN integer_N))) ;  
lin Li's_criterion_Q6538608_MT = variants {} ; --Li's criterion 
lin law_of_cosines_Q164321_CN = NounPrepCN (UseN law_N) (PrepNP part_Prep (IndefPluralCN (UseN cosine_N))) ;  
}
